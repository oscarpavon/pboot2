include "efierror.s"
EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL = 64
EFI_TEXT_STRING = 8

EFI_TABLE_HEADER = 24
;EFI_SUCCESS = 0
;Boot Services
EFI_OPEN_PROTOCOL = EFI_TABLE_HEADER + (32*8)
EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL = 0x00000001

EFI_BOOT_SERVICES = 96

EFI_MEMORY_LOADER_DATA = 1

SHADOW_SPACE = 32

; Boot Services
EFI_ALLOCATE_POOL = EFI_TABLE_HEADER + (5 * 8)

EFI_HANDLE_PROTOCOL = EFI_ALLOCATE_POOL + (11 * 8)
EFI_LOCATE_HANDLE = EFI_ALLOCATE_POOL + (14 * 8)

LOCATE_BY_PROTOCOL = 2

EFI_IMAGE_LOAD = EFI_ALLOCATE_POOL + (17 * 8)
EFI_IMAGE_START = EFI_ALLOCATE_POOL + (18 * 8)

;Loaded Image Protocol
DEVICE = 24
FILE_PATH = 32
ARGUMENTS_SIZE = FILE_PATH + 16
ARGUMENTS = ARGUMENTS_SIZE + 8

OPEN_VOLUME = 8

;Simple File System Protocol
OPEN = 8
CLOSE = 16
READ = 32
GET_POSITION = 48
SET_POSITION = 56
MAX_FILE_POSITION = 0xFFFFFFFFFFFFFFFF

EFI_FILE_READ_ONLY = 0x1
EFI_FILE_MODE_READ = 0x1


EFI_HARDWARE_DEVICE_PATH = 0x01
EFI_END_HARDWARE_DEVICE_PATH = 0x7F
EFI_END_DEVICE_INSTANCE_PATH = 0x01
EFI_END_ENTIRE_DEVICE_PATH = 0xFF
EFI_MEMORY_MAPPED_DEVICE_PATH = 0x3
OFFSET_START_ADDRESS = 8
OFFSET_END_ADDRESS = 16

